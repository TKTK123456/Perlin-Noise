<title>Perlin noise</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<style>
.centerbox {
  /* flexbox, por favor */
  display: -webkit-box;
  -webkit-box-orient: horizontal;
  -webkit-box-pack: center;
  -webkit-box-align: center;

  display: -moz-box;
  -moz-box-orient: horizontal;
  -moz-box-pack: center;
  -moz-box-align: center;

  width: 100%;
  height: 100%;
  margin: 0; padding: 0;
}
body, html { width: 100%; height: 100%; padding: 0; margin: 0; }
canvas {
  /* border-radius: 30px;  Border radiuses don't seem to work with putImageData */
  box-shadow: 0 0 10px #777;
  width: <%= canvasWidth %>px;
  height: <%= canvasHeight %>px;
}
body {
  background-color: #eee;
}
</style>
<div class='centerbox'><canvas></canvas></div>
<script>
async function Noise(x, y, z, d) {
  const body = {
    d: d,
    x: x,
    y: y,
    z: z,
  }
  const noise = await $.post("/noise", body)
  return noise
}
var canvas = document.getElementsByTagName('canvas')[0];
canvas.width = parseInt('<%= canvasWidth %>');
canvas.height = parseInt('<%= canvasHeight %>');

var ctx = canvas.getContext('2d');

var image = ctx.createImageData(canvas.width, canvas.height);
var data = image.data;
async function render(d) {
var start = Date.now();
if (d==2) {
const noise = await Promise.resolve(Noise(canvas.width, canvas.height, 0, d)).then((value) => {
    return value
  })
for (var x = 0; x < canvas.width; x++) {
  for (var y = 0; y < canvas.height; y++) {
    var value = noise[x+y*(canvas.width)]
    value *= 256;
    var cell = (x + y * canvas.width) * 4;
    data[cell] = data[cell + 1] = data[cell + 2] = value;
    data[cell] += Math.max(0, (25 - value) * 8);
    data[cell + 3] = 255; // alpha.
  }
}
}
/* // Benchmark code.
start = Date.now();
for (var x = 0; x < 10000; x++) {
  for (var y = 0; y < 10000; y++) {
    noise.simplex2(x / 50, y/50);
  }
}*/
var end = Date.now();
ctx.fillRect(0, 0, 100, 100);
ctx.putImageData(image, 0, 0);


ctx.font = '16px sans-serif'
ctx.textAlign = 'center';
ctx.fillText('Rendered in ' + (end - start) + ' ms', canvas.width / 2, canvas.height - 20);

if(console) {
  console.log('Rendered in ' + (end - start) + ' ms');
}
}
</script>
<button onclick="render(2)">Render 2D</button>